<html>

<head>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-7726590371480649"
        crossorigin="anonymous"></script>
    <link rel="stylesheet" href="/styles/header.css">
    <link rel="icon" href="/assets/images/foxycake.png">
    <title>
        <%= guild.name %>
    </title>
    <link rel="stylesheet" href="/styles/dashboard.css" type="text/css">
    <link rel="stylesheet" href="/styles/footer.css" type="text/css">
</head>

<body>
    <header>
        <nav class="navigation-bar fixed" data-preload-persist="true" id="navigation-bar">
            <div class="left-entries">
                <div class="entry foxy-navbar-logo">
                    <a href="/"><img src="/assets/images/Foxy.png" style="font-size: 0px;
                        line-height: 0px;
                        width: 40px;
                        height: 40px;
                        position: absolute;
                        top: 3px;
                        border-radius: 100%;">
                    </a>
                </div>
                <div class="entry">
                    <a href="/br/support" class="menu" data-preload-link="true"
                        data-preload-link-activated="true">Suporte</a>
                </div>
                <div class="entry">
                    <a href="/br/support/terms" class="menu" data-preload-link="true"
                        data-preload-link-activated="true">Termos</a>
                </div>
                <div class="entry">
                    <a href="/upvote" class="menu">Votar</a>
                </div>
                <div class="entry"><a href="/br/premium" class="menu">
                        Premium
                    </a></div>
                <div class="entry"><a href="/br/commands" class="menu">
                        Comandos
                    </a></div>
            </div>
            <div class="right-entries">
                <div class="entry">
                    <a class="theme-changer" id="theme-changer-button">
                        <span></span>
                        <span style="display: none;"></span>
                    </a>
                </div>
                <div class="entry" id="locale-changer-button" style="cursor: default;"></div>
                <div class="entry">
                    <a href="/br/dashboard" id="login-button">
                        <img src="https://cdn.discordapp.com/avatars/<%= user.id %>/<%= user.avatar %>.png" style="font-size: 0px;
                            line-height: 0px;
                            width: 40px;
                            height: 40px;
                            position: absolute;
                            top: 3px;
                            border-radius: 100%;">
                        <div style="font-size: 0px;
                            line-height: 0px;
                            width: 40px;
                            visibility: hidden;
                            height: 0px;
                            display: inline-block;"></div>
                        <span style="padding-left: 4px;">
                            <%= user.global_name %>
                        </span>
                    </a>
                </div>
            </div>
        </nav>
        <button id="menu" class="mobile">Menu</button>
    </header>

    <div id="mobile__menu" class="overlay">
        <a class="close">&times;</a>
        <div class="overlay__content">
            <a href="/github">GitHub</a>
            <a href="/discord">Suporte</a>
            <a href="/br/support/terms">Termos de uso</a>
            <a href="/br/dashboard">Dashboard</a>
        </div>
    </div>

    <main>
        <div class="invite-blocker-section">
            <h2 class="feature-title">Bloqueador de convites</h2>
            <h3 class="feature-description">Utilize esse recurso para bloquear convites indesejados em seu servidor!
            </h3>
            <form id="inviteBlockerForm" action="/inviteblocker/save/<%= guild.id %>" method="POST"
                data-guild-id="<%= guild.id %>">
                <h3 class="input-text">Ativar módulo?</h3>
                <h4 class="input-description">Ative para que eu possa bloquear convites em seu servidor</h4>
                <label class="switch">
                    <input type="checkbox" id="inviteblocker-switch" name="inviteblocker" class="switch">
                    <span class="slider round"></span>
                </label>
                <br>

                <h3 class="input-text">Mensagem quando um convite for enviado</h3>
                <h4 class="input-description">Edite a mensagem que será enviada para o usuário quando um convite for
                    detecado</h4>
                <textarea id="messageTextArea" name="blockmessage" rows="6" cols="50"></textarea>

                <h3 class="form-text">Canais onde são permitidos o envio de convites</h3>
                <h4 class="input-description">Selecione os canais onde os usuários podem enviar convites</h4>
                <select name="channels" id="channels">
                    <% channels.forEach(channel=> { %>
                        <% if (channel.type===0) { %>
                            <option value="<%= channel.id %>">
                                <%= channel.name %>
                            </option>
                            <% } %>
                                <% }) %>
                </select>
                <ul class="discord-mention" id="selectedChannelsList"></ul>

                <button type="button" id="addChannelButton">Adicionar Canal</button>
                <h3 class="form-text">Cargos que podem enviar convites em qualquer lugar</h3>
                <h4 class="input-description">Selecione os cargos que podem enviar convites em qualquer lugar</h4>
                <select name="roles" id="roles">
                    <% roles.forEach(role=> { %>
                        <option value="<%= role.id %>">
                            <%= role.name %>
                        </option>
                        <% }) %>
                </select>
                <ul class="discord-mention" id="selectedRolesList"></ul>

                <div class="notification error" id="notificationError">
                    <span id="notificationErrorText"></span>
                </div>
                <div class="notification" id="notification">
                    <span id="notificationText"></span>
                </div>
                <button type="button" id="addRoleButton">Adicionar Cargo</button>
                <input type="hidden" name="selectedChannels" id="selectedChannelsInput" value="">
                <input type="hidden" name="selectedRoles" id="selectedRolesInput" value="">
                <input id="save" type="submit" value="Salvar">
            </form>
        </div>
        </div>
    </main>

    <style>
        ul {
            list-style-type: none;
            display: flex;
            flex-wrap: wrap;
        }

        li {
            cursor: pointer;
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            font-family: sans-serif;
            color: white;
            margin-left: 1rem;
            word-wrap: break-word;
            overflow-wrap: break-word;
        }
    </style>
    <script>
        const switchElement = document.getElementById("inviteblocker-switch");
        const textareaElement = document.getElementById("messageTextArea");
        switchElement.checked = "<%= guildInfoFromDB.InviteBlockerModule.isEnabled %>" === "true";
        const blockMessage = `<%= guildInfoFromDB.InviteBlockerModule.blockMessage.replace(/\n/g, '') %>`;
        function decodeHtml(html) {
            var txt = document.createElement("textarea");
            txt.innerHTML = html;
            return txt.value;
        }

        const decodedBlockMessage = decodeHtml(blockMessage);

        textareaElement.value = decodedBlockMessage;
        /* Script to load roles and channels */

        let selectedRoles = [];
        let selectedChannels = [];

        let selectedRolesFromDB = "<%= guildInfoFromDB.InviteBlockerModule.whitelistedRoles %>";
        let selectedChannelsFromDB = "<%= guildInfoFromDB.InviteBlockerModule.whitelistedChannels %>";
        console.log(selectedChannelsFromDB);
        console.log(selectedRolesFromDB)
        if (selectedRolesFromDB !== '') {
            selectedRolesFromDB = selectedRolesFromDB.split(',');
            selectedRolesFromDB.forEach(role => {
                let roleElement = document.getElementById('roles');
                let option = roleElement.options[roleElement.selectedIndex];
                if (option.value === role) {
                    selectedRoles.push({
                        id: role,
                        name: option.text
                    });
                    option.disabled = true;
                    let selectElement = document.getElementById('selectedRolesInput');
                    selectElement.value = selectedRoles.map(r => r.id).join(',');
                    let listElement = document.getElementById('selectedRolesList');
                    let listItem = document.createElement('li');
                    listItem.textContent = `@${selectedRoles[selectedRoles.length - 1].name}`;
                    listItem.onclick = function () {
                        removeRole(roleElement);
                    };
                    listElement.appendChild(listItem);
                }
            });
        }

        if (selectedChannelsFromDB !== '') {
            selectedChannelsFromDB = selectedChannelsFromDB.split(',');
            selectedChannelsFromDB.forEach(channel => {
                let channelElement = document.getElementById('channels');
                let option = channelElement.options[channelElement.selectedIndex];
                if (option.value === channel) {
                    selectedChannels.push({
                        id: channel,
                        name: option.text
                    });
                    option.disabled = true;
                    let selectElement = document.getElementById('selectedChannelsInput');
                    selectElement.value = selectedChannels.map(c => c.id).join(',');
                    let listElement = document.getElementById('selectedChannelsList');
                    let listItem = document.createElement('li');
                    listItem.textContent = `#${selectedChannels[selectedChannels.length - 1].name}`;
                    listItem.onclick = function () {
                        removeChannel(channelElement);
                    };
                    listElement.appendChild(listItem);
                }
            });
        }
        document.getElementById('addRoleButton').addEventListener('click', function () {
            let role = document.getElementById('roles');
            if (!selectedRoles.some(r => r.id === role.value)) {
                let selectedOption = role.options[role.selectedIndex];
                selectedRoles.push({
                    id: role.value,
                    name: selectedOption.text
                });
                let selectElement = document.getElementById('selectedRolesInput');
                selectElement.value = selectedRoles.map(r => r.id).join(',');
                let listElement = document.getElementById('selectedRolesList');
                let listItem = document.createElement('li');
                listItem.textContent = `@${selectedRoles[selectedRoles.length - 1].name}`;
                listItem.onclick = function () {
                    removeRole(role);
                };
                listElement.appendChild(listItem);
                selectedOption.disabled = true;
            }
        });

        document.getElementById('addChannelButton').addEventListener('click', function () {
            let channel = document.getElementById('channels');
            if (!selectedChannels.some(c => c.id === channel.value)) {
                let selectedOption = channel.options[channel.selectedIndex];
                selectedChannels.push({
                    id: channel.value,
                    name: selectedOption.text
                });
                let selectElement = document.getElementById('selectedChannelsInput');
                selectElement.value = selectedChannels.map(c => c.id).join(','); // Modificado aqui
                let listElement = document.getElementById('selectedChannelsList');
                let listItem = document.createElement('li');
                listItem.textContent = `#${selectedChannels[selectedChannels.length - 1].name}`;
                listItem.onclick = function () {
                    removeChannel(channel);
                };
                listElement.appendChild(listItem);
                selectedOption.disabled = true;
            }
        });

        function removeRole(roleElement) {
            let selectedOption = roleElement.options[roleElement.selectedIndex];
            selectedOption.disabled = false;
            selectedRoles = selectedRoles.filter(role => role.id !== selectedOption.value);
            let selectElement = document.getElementById('selectedRolesInput');
            selectElement.value = selectedRoles.join(',');
            let listElement = document.getElementById('selectedRolesList');
            listElement.innerHTML = '';
            selectedRoles.forEach(role => {
                let listItem = document.createElement('li');
                listItem.textContent = `@${role.name}`;
                listItem.onclick = function () {
                    removeRole(roleElement);
                };
                listElement.appendChild(listItem);
            });
        }

        function removeChannel(channelElement) {
            let selectedOption = channelElement.options[channelElement.selectedIndex];
            selectedOption.disabled = false;
            selectedChannels = selectedChannels.filter(channel => channel.id !== selectedOption.value);
            let selectElement = document.getElementById('selectedChannelsInput');
            selectElement.value = selectedChannels.join(',');
            let listElement = document.getElementById('selectedChannelsList');
            listElement.innerHTML = '';
            selectedChannels.forEach(channel => {
                let listItem = document.createElement('li');
                listItem.textContent = `#${channel.name}`;
                listItem.onclick = function () {
                    removeChannel(channelElement);
                };
                listElement.appendChild(listItem);
            });
        }
        /* End of script to load roles and channels */
    </script>

    <script src="../js/inviteblockerform.js"></script>

    <div class="left-sidebar">
        <div class="entries">
            <hr class="separator">
            <h2 class="section-title">Automações</h2>
            <a href="/br/servers/<%= guild.id %>/">
                <div class="entry" id="selected">
                    Bloqueador de Convites
                </div>
            </a>
            <a href="/br/servers/<%= guild.id %>/autorole">
                <div class="entry">
                    Autorole
                </div>
            </a>
            <a href="/br/servers/<%= guild.id %>/welcome">
                <div class="entry">
                    Mensagem de entrada/saída
                </div>
            </a>
            <hr class="separator">
            <h2 class="section-title">Miscelâneas</h2>

            <a href="/br/servers/<%= guild.id %>/premium">
                <div class="entry">
                    Gerenciar chaves premium
                </div>
            </a>

            <a href="/br/servers/<%= guild.id %>/command-manager">
                <div class="entry">
                    Gerenciador de comandos
                </div>
                <hr class="separator">
                <a href="/logout">
                    <div class="entry">
                        Sair
                    </div>
                </a>
        </div>
    </div>
</body>
<script src="../js/HeaderMobile.js"></script>

</html>